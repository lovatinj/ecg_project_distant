[{"/home/fatouille/dev/Ecg_Project/src/index.js":"1","/home/fatouille/dev/Ecg_Project/src/reportWebVitals.js":"2","/home/fatouille/dev/Ecg_Project/src/App.js":"3","/home/fatouille/dev/Ecg_Project/src/pages/information.js":"4","/home/fatouille/dev/Ecg_Project/src/pages/historique.js":"5","/home/fatouille/dev/Ecg_Project/src/components/ecg.js":"6","/home/fatouille/dev/Ecg_Project/src/components/heart.js":"7","/home/fatouille/dev/Ecg_Project/src/components/chart_history.js":"8","/home/fatouille/dev/Ecg_Project/src/pages/electrocardiogramme.js":"9","/home/fatouille/dev/Ecg_Project_distant/src/index.js":"10","/home/fatouille/dev/Ecg_Project_distant/src/reportWebVitals.js":"11","/home/fatouille/dev/Ecg_Project_distant/src/App.js":"12","/home/fatouille/dev/Ecg_Project_distant/src/pages/historique.js":"13","/home/fatouille/dev/Ecg_Project_distant/src/components/chart_history.js":"14","/home/fatouille/dev/Ecg_Project_distant/src/pages/informations.js":"15"},{"size":574,"mtime":1700834056670,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1700729506648,"results":"18","hashOfConfig":"17"},{"size":6168,"mtime":1700819073161,"results":"19","hashOfConfig":"17"},{"size":3834,"mtime":1701711924400,"results":"20","hashOfConfig":"17"},{"size":6459,"mtime":1700834079658,"results":"21","hashOfConfig":"17"},{"size":2007,"mtime":1700819461875,"results":"22","hashOfConfig":"17"},{"size":816,"mtime":1700731127185,"results":"23","hashOfConfig":"17"},{"size":1641,"mtime":1700749711811,"results":"24","hashOfConfig":"17"},{"size":353,"mtime":1700819165146,"results":"25","hashOfConfig":"17"},{"size":574,"mtime":1702304866768,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1702304866768,"results":"28","hashOfConfig":"27"},{"size":5563,"mtime":1704302481660,"results":"29","hashOfConfig":"27"},{"size":4921,"mtime":1704302255424,"results":"30","hashOfConfig":"27"},{"size":1648,"mtime":1704302287337,"results":"31","hashOfConfig":"27"},{"size":3073,"mtime":1704303149202,"results":"32","hashOfConfig":"27"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rbfo0k",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ai29mf",{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},"/home/fatouille/dev/Ecg_Project/src/index.js",[],"/home/fatouille/dev/Ecg_Project/src/reportWebVitals.js",[],"/home/fatouille/dev/Ecg_Project/src/App.js",["69"],"import React from 'react';\nimport { Switch, Route, Link, BrowserRouter } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport io from 'socket.io-client';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HeartBrokenIcon from '@mui/icons-material/HeartBroken';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InfoIcon from '@material-ui/icons/Info';\nimport HistoryIcon from '@material-ui/icons/History';\n\nimport Information from \"./pages/information\"\nimport Historique from \"./pages/historique\"\nimport Electrocardiogramme from \"./pages/electrocardiogramme\"\n\nconst drawerWidth = 240;\nconst socket = io('http://localhost:3001');\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    drawerContainer: {\n        overflow: 'auto',\n    },\n    toolbar: {\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n});\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n            anchorEl: null,\n            openJoinDialog: false,\n            openCloseDialog: false,\n            openCreateDialog: false,\n            openLeaveDialog: false,\n            duration: '60',\n            channel: 26\n        }\n\n        this._handleToggleDrawer = this._handleToggleDrawer.bind(this);\n    }\n\n    _handleToggleDrawer(event, toggled) {\n        this.setState({open: !this.state.open});\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { open, anchorEl } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={this._handleToggleDrawer}>\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            ECG PROJECT\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n\n                <BrowserRouter>\n                <Drawer\n                    variant=\"permanent\"\n                    className={clsx(classes.drawer, {\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    })}\n                    classes={{\n                        paper: clsx({\n                            [classes.drawerOpen]: open,\n                            [classes.drawerClose]: !open,\n                        }),\n                    }}\n                >\n                    <Toolbar />\n                    <div className={classes.toolbar}>\n                        <List>\n                            <ListItem button key={\"Information\"} component={Link} to=\"/information\">\n                                <ListItemIcon>\n                                    <InfoIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Information\"} />\n                            </ListItem>\n                            <ListItem button component={Link} to=\"/historique\">\n                                <ListItemIcon>\n                                    <HistoryIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Historique\"} />\n                            </ListItem>\n                            <ListItem button component={Link} to=\"/ecg\">\n                                <ListItemIcon>\n                                    <HeartBrokenIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Ecg\"} />\n                            </ListItem>\n                        </List>\n                    </div>\n                </Drawer>\n\n                <main className={classes.content}>\n                    <Toolbar />\n                    <Switch>\n                        <Route exact path=\"/\" render={(props) => (<Information {...props} socket={socket}/>)} />\n                        <Route path=\"/historique\" render={(props) => (<Historique {...props} socket={socket}/>)} />\n                        <Route path=\"/information\" render={(props) => (<Information {...props} socket={socket}/>)} />\n                        <Route path=\"/ecg\" render={(props) => (<Electrocardiogramme {...props} socket={socket}/>)} />\n                    </Switch>\n                </main>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(App);\n","/home/fatouille/dev/Ecg_Project/src/pages/information.js",["70","71","72","73","74","75"],"/home/fatouille/dev/Ecg_Project/src/pages/historique.js",["76","77"],"import React from 'react';\nimport { Grid, Button } from '@material-ui/core';\n// import TimePicker from 'react-time-picker';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { format, parse } from 'date-fns';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\n\nimport 'react-time-picker/dist/TimePicker.css';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\n\nimport History from \"../components/chart_history\"\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen,\n      }),\n  },\n  drawerClose: {\n      transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n          width: theme.spacing(9) + 1,\n      },\n  },\n  drawerContainer: {\n      overflow: 'auto',\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n})\n\nclass Historique extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      startTme: \"\",\n      endTime: \"\",\n      openDialog: true,\n      dataHistory: [],\n      hide: true\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.socket.on(\"set:data\", data => {\n      this.setState({dataHistory: data})\n    })\n  }\n\n  handleStartDateChange = (value) => {\n    this.setState({startTme: value})\n  }\n\n  handleEndDateChange = (value) => {\n    this.setState({endTime: value})\n  }\n\n  // handleSearch = () => {\n  //   // Utilisez startDate et endDate comme nécessaire\n  //   console.log('Dates sélectionnées :', this.state.startTme, this.state.endTime);\n  // };\n\n  handleOpenDialog = () => {\n    this.setState({openDialog: true})\n  }\n\n  handleCloseDialog = () => {\n    this.setState({openDialog: false})\n  }\n\n  handleSendDialog = () => {\n    this.setState({\n      openDialog: false,\n      hide: false\n    })\n    const startTime = new Date(this.state.startTme)\n    const EndTime = new Date(this.state.endTime)\n    const heureStartFormatee = format(parse(startTime.getHours() + \":\" + startTime.getMinutes(), 'H:mm', new Date()), 'HH:mm');\n    const heureEndFormatee = format(parse(EndTime.getHours() + \":\" + EndTime.getMinutes(), 'H:mm', new Date()), 'HH:mm');\n    this.props.socket.emit(\"get:data\", [heureStartFormatee, heureEndFormatee])\n  }\n\n  render(){\n    const { classes, socket } = this.props;\n\n    return(\n      <div>\n        <Dialog open={this.state.openDialog} onClose={this.handleCloseDialog} aria-labelledby=\"choose-time-picker\" maxWidth=\"lg\">\n        <DialogTitle id=\"choose-time-picker\">Choisir l'intervalle de votre historique</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Choissisez vos heures de début et de fin\n            </DialogContentText>\n            <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              {/* <form className={classes.container} noValidate>\n                <TextField\n                  id=\"time\"\n                  onChange={(e) => this.handleStartDateChange(e)}\n                  label=\"Heure de début\"\n                  type=\"time\"\n                  value={this.state.startTme}\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  inputProps={{\n                    step: 300,\n                  }}\n                />\n              </form> */}\n              <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DemoContainer components={['TimePicker']}>\n                  <TimePicker \n                    label=\"Heure de début\"\n                    onChange={(value) => this.handleStartDateChange(value)}\n                  />\n                </DemoContainer>\n              </LocalizationProvider>\n            </Grid>\n            <Grid item>\n              {/* <form className={classes.container} noValidate>\n                <TextField\n                  id=\"time\"\n                  onChange={(e) => this.handleEndDateChange(e)}\n                  label=\"Heure de fin\"\n                  type=\"time\"\n                  value={this.state.endTime}\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  inputProps={{\n                    step: 300,\n                  }}\n                />\n              </form> */}\n              <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DemoContainer components={['TimePicker']}>\n                  <TimePicker \n                    label=\"Heure de fin\"\n                    onChange={(value) => this.handleEndDateChange(value)}\n                  />\n                </DemoContainer>\n              </LocalizationProvider>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={this.handleCloseDialog} color=\"primary\">\n                Fermer\n            </Button>\n            <Button onClick={this.handleSendDialog} color=\"primary\">\n                Rechercher\n            </Button>\n        </DialogActions>\n        </Dialog>\n        \n        {!this.state.hide ?\n          <History socket={socket}/>\n        : null}\n\n      <Fab className=\"fab-historique-button\" onClick={this.handleOpenDialog} color=\"primary\" aria-label=\"add\">\n        <AddIcon />\n      </Fab>\n\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Historique);","/home/fatouille/dev/Ecg_Project/src/components/ecg.js",["78"],"import React from 'react';\n\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\n/*import PowerChart from './power-chart';*/\n\nChart.register(CategoryScale);\n\nexport const options = {\n    plugins: {\n        title: {\n            display: true,\n            text: \"Electrocardiogramme\"\n        },\n        legend: {\n            display: false\n        }\n    }\n};\n\nclass PowerChartContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            measures: []\n        }\n    }\n\n    componentDidMount() {\n        this.props.socket.on(\"ecg:value\", data => this._updateMeasures(data));\n    }\n\n    _updateMeasures = (data) => {\n        if(this.state.measures.length == 50){\n            var shift_array = this.state.measures;\n            shift_array.shift();\n            this.setState({measures: shift_array});\n            this.setState(prevState => ({\n                measures: [...prevState.measures, data]\n            }))\n        }else{\n            this.setState(prevState => ({\n                measures: [...prevState.measures, data]\n            }))\n        }\n\n        \n    }\n\n    render() {\n        let chartData = {\n            labels: this.state.measures.map((data) => {\n                const date = new Date();\n                return date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n            }),\n            /*labels: [],*/\n            datasets: [{\n                label: \"Temps\",\n                //data: this.state.measures.map((data) => data.value),\n                data: this.state.measures.map((data) => data),\n                fill: false,\n                borderColor: \"black\",\n                pointRadius: 0,\n                borderWidth: 2,\n                tension: 0.1\n            }]\n        };\n\n        return (\n            <div>\n                <Line data={chartData} options={options} />\n            </div>\n        )\n    }\n}\n\nexport default PowerChartContainer;\n","/home/fatouille/dev/Ecg_Project/src/components/heart.js",[],"/home/fatouille/dev/Ecg_Project/src/components/chart_history.js",[],"/home/fatouille/dev/Ecg_Project/src/pages/electrocardiogramme.js",[],"/home/fatouille/dev/Ecg_Project_distant/src/index.js",[],"/home/fatouille/dev/Ecg_Project_distant/src/reportWebVitals.js",[],"/home/fatouille/dev/Ecg_Project_distant/src/App.js",["79"],"import React from 'react';\nimport { Switch, Route, Link, BrowserRouter } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport io from 'socket.io-client';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HistoryIcon from '@material-ui/icons/History';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport Historique from \"./pages/historique\"\nimport Information from './pages/informations';\n\nconst drawerWidth = 240;\nconst socket = io('http://localhost:3002');\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    drawerContainer: {\n        overflow: 'auto',\n    },\n    toolbar: {\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n});\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n            anchorEl: null,\n            openJoinDialog: false,\n            openCloseDialog: false,\n            openCreateDialog: false,\n            openLeaveDialog: false,\n            duration: '60',\n            channel: 26\n        }\n\n        this._handleToggleDrawer = this._handleToggleDrawer.bind(this);\n    }\n\n    _handleToggleDrawer(event, toggled) {\n        this.setState({open: !this.state.open});\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { open, anchorEl } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={this._handleToggleDrawer}>\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            ECG PROJECT\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n\n                <BrowserRouter>\n                <Drawer\n                    variant=\"permanent\"\n                    className={clsx(classes.drawer, {\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    })}\n                    classes={{\n                        paper: clsx({\n                            [classes.drawerOpen]: open,\n                            [classes.drawerClose]: !open,\n                        }),\n                    }}\n                >\n                    <Toolbar />\n                    <div className={classes.toolbar}>\n                        <List>\n                            <ListItem button component={Link} to=\"/info\">\n                                <ListItemIcon>\n                                    < InfoIcon/>\n                                </ListItemIcon>\n                                <ListItemText primary={\"Historique\"} />\n                            </ListItem>\n                            <ListItem button component={Link} to=\"/historique\">\n                                <ListItemIcon>\n                                    <HistoryIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Historique\"} />\n                            </ListItem>\n                        </List>\n                    </div>\n                </Drawer>\n\n                <main className={classes.content}>\n                    <Toolbar />\n                    <Switch>\n                        <Route exact path=\"/\" render={(props) => (<Information {...props} socket={socket}/>)} />\n                        <Route path=\"/info\" render={(props) => (<Information {...props} socket={socket}/>)} />\n                        <Route path=\"/historique\" render={(props) => (<Historique {...props} socket={socket}/>)} />\n                    </Switch>\n                </main>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(App);\n","/home/fatouille/dev/Ecg_Project_distant/src/pages/historique.js",["80","81","82","83","84"],"import React from 'react';\nimport { Grid, Button } from '@material-ui/core';\n// import TimePicker from 'react-time-picker';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { format, parse } from 'date-fns';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\nimport moment from \"moment\"\n\nimport 'react-time-picker/dist/TimePicker.css';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport dayjs from 'dayjs';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DateField } from '@mui/x-date-pickers/DateField';\n\nimport History from \"../components/chart_history\"\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen,\n      }),\n  },\n  drawerClose: {\n      transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n          width: theme.spacing(9) + 1,\n      },\n  },\n  drawerContainer: {\n      overflow: 'auto',\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n})\n\nclass Historique extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      startTime: \"\",\n      endTime: \"\",\n      openDialog: true,\n      dataHistory: [],\n      hide: true\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.socket.on(\"post:historique\", data => {\n      this.setState({dataHistory: data})\n    })\n  }\n\n  handleStartDateChange = (value) => {\n    this.setState({startTime: value})\n  }\n\n  handleEndDateChange = (value) => {\n    this.setState({endTime: value})\n  }\n\n  // handleSearch = () => {\n  //   // Utilisez startDate et endDate comme nécessaire\n  //   console.log('Dates sélectionnées :', this.state.startTme, this.state.endTime);\n  // };\n\n  handleOpenDialog = () => {\n    this.setState({openDialog: true})\n  }\n\n  handleCloseDialog = () => {\n    this.setState({openDialog: false})\n  }\n\n  handleSendDialog = () => {\n    this.setState({\n      openDialog: false,\n      hide: false\n    })\n\n    const startDate = new Date(this.state.startTime[\"$d\"])\n    const endDate = new Date(this.state.endTime[\"$d\"])\n\n    const formattedDateStart = moment(startDate).format('DD-MM-YYYY');\n    const formattedDateEnd = moment(endDate).format('DD-MM-YYYY');\n\n    this.props.socket.emit(\"get:data\", [formattedDateStart, formattedDateEnd])\n  }\n\n\n  render(){\n    const { classes, socket } = this.props;\n    const tomorrow = dayjs().add(1, 'day');\n\n    return(\n      <div>\n        <Dialog open={this.state.openDialog} onClose={this.handleCloseDialog} aria-labelledby=\"choose-time-picker\" maxWidth=\"lg\">\n        <DialogTitle id=\"choose-time-picker\">Choisir l'intervalle de votre historique</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Choissisez vos heures de début et de fin\n            </DialogContentText>\n            <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n              <DateField onChange={(value) => this.handleStartDateChange(value)} disableFuture />\n            </LocalizationProvider>\n            </Grid>\n            <Grid item>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n              <DateField onChange={(value) => this.handleEndDateChange(value)} disableFuture />\n            </LocalizationProvider>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={this.handleCloseDialog} color=\"primary\">\n                Fermer\n            </Button>\n            <Button onClick={this.handleSendDialog} color=\"primary\">\n                Rechercher\n            </Button>\n        </DialogActions>\n        </Dialog>\n        \n        {!this.state.hide ?\n          <History socket={socket}/>\n        : null}\n\n      <Fab className=\"fab-historique-button\" onClick={this.handleOpenDialog} color=\"primary\" aria-label=\"add\">\n        <AddIcon />\n      </Fab>\n\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Historique);","/home/fatouille/dev/Ecg_Project_distant/src/components/chart_history.js",[],"/home/fatouille/dev/Ecg_Project_distant/src/pages/informations.js",["85"],"import React from 'react';\n\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@mui/material/Snackbar';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nclass Information extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      currentBpm: \"80\",\n      open: false,\n      bpm: \"\",\n      phone: \"\",\n      email: \"\"\n    }\n  }\n\n  handleChangeField = (e) => {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    this.setState({open: false});\n  };\n\n  handleSave = () => {\n    this.setState({open: true});\n    console.log(this.state)\n    this.props.socket.emit(\"set:informations\", {\n      bpm: this.state.bpm,\n      phone: this.state.phone,\n      email: this.state.email\n    })\n  };\n\n  setMessages = (message) => {\n    this.setState({currentBpm: message})\n  }\n\n  componentDidMount = () => {\n    this.props.socket.emit(\"get:informations\");\n    this.props.socket.on('send:informations', (information) => {\n      this.setState({\n        bpm: information.bpm,\n        phone: information.phone,\n        email: information.email\n      });\n    });\n  }\n\n  render(){\n    const { socket } = this.props;\n\n    return(\n      <div>\n        <div className=\"flex-display-information\">\n          <div className='flex-display-box'>\n            <TextField onChange={e => this.handleChangeField(e)} value={this.state.bpm} name=\"bpm\" className='input-form' id=\"standard-basic\" label=\"BPM Maximum\" variant=\"standard\" />\n            <TextField onChange={e => this.handleChangeField(e)} value={this.state.email} name=\"email\" className='input-form' id=\"standard-basic\" label=\"E-mail\" variant=\"standard\" />\n            <TextField onChange={e => this.handleChangeField(e)} value={this.state.phone} name=\"phone\" className='input-form' id=\"standard-basic\" label=\"Numéro de téléphone\" variant=\"standard\" />\n            <Button onClick={this.handleSave} className=\"button-information-enregistrer\" color='primary' variant=\"contained\">Enregistrer</Button>\n          </div>\n        </div>\n        \n        <Snackbar anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }} open={this.state.open} autoHideDuration={6000} onClose={this.handleClose}>\n          <Alert onClose={this.handleClose} severity=\"success\" sx={{ width: '100%' }}>\n            Vos informations ont été enregistrées.\n          </Alert>\n        </Snackbar>\n        {/* <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography>ECG</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Ecg socket={socket}/>\n          </AccordionDetails>\n        </Accordion> */}\n        \n      </div>\n    );\n  }\n}\n\nexport default Information;\n",{"ruleId":"86","severity":1,"message":"87","line":105,"column":23,"nodeType":"88","messageId":"89","endLine":105,"endColumn":31},{"ruleId":"86","severity":1,"message":"90","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":11},{"ruleId":"86","severity":1,"message":"91","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":17},{"ruleId":"86","severity":1,"message":"92","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":24},{"ruleId":"86","severity":1,"message":"93","line":7,"column":8,"nodeType":"88","messageId":"89","endLine":7,"endColumn":24},{"ruleId":"86","severity":1,"message":"94","line":8,"column":8,"nodeType":"88","messageId":"89","endLine":8,"endColumn":22},{"ruleId":"86","severity":1,"message":"95","line":76,"column":13,"nodeType":"88","messageId":"89","endLine":76,"endColumn":19},{"ruleId":"86","severity":1,"message":"96","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":17},{"ruleId":"86","severity":1,"message":"97","line":117,"column":13,"nodeType":"88","messageId":"89","endLine":117,"endColumn":20},{"ruleId":"98","severity":1,"message":"99","line":37,"column":39,"nodeType":"100","messageId":"101","endLine":37,"endColumn":41},{"ruleId":"86","severity":1,"message":"87","line":103,"column":23,"nodeType":"88","messageId":"89","endLine":103,"endColumn":31},{"ruleId":"86","severity":1,"message":"96","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":17},{"ruleId":"86","severity":1,"message":"102","line":6,"column":10,"nodeType":"88","messageId":"89","endLine":6,"endColumn":16},{"ruleId":"86","severity":1,"message":"103","line":6,"column":18,"nodeType":"88","messageId":"89","endLine":6,"endColumn":23},{"ruleId":"86","severity":1,"message":"97","line":122,"column":13,"nodeType":"88","messageId":"89","endLine":122,"endColumn":20},{"ruleId":"86","severity":1,"message":"104","line":123,"column":11,"nodeType":"88","messageId":"89","endLine":123,"endColumn":19},{"ruleId":"86","severity":1,"message":"95","line":63,"column":13,"nodeType":"88","messageId":"89","endLine":63,"endColumn":19},"no-unused-vars","'anchorEl' is assigned a value but never used.","Identifier","unusedVar","'Ecg' is defined but never used.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'socket' is assigned a value but never used.","'TextField' is defined but never used.","'classes' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'format' is defined but never used.","'parse' is defined but never used.","'tomorrow' is assigned a value but never used."]